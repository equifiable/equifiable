"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.get_sandbox_exec_address = exports.configure_experiment = exports.mockup_init = exports.mockup_bake = exports.get_mockup_level = exports.register_global_constant = exports.json_micheline_to_expr = exports.expr_micheline_to_json = exports.transfer = exports.exec_view = exports.exec_getter = exports.exec_batch = exports.get_call_param = exports.call = exports.get_callback_value = exports.deploy_callback = exports.deploy_from_json = exports.originate = exports.deploy = exports.get_raw_storage = exports.get_storage = exports.sign = exports.get_big_map_value = exports.expect_to_fail = exports.get_balance = exports.blake2b = exports.pack = exports.get_account = exports.delay_mockup_now_by_week = exports.delay_mockup_now_by_day = exports.delay_mockup_now_by_hour = exports.delay_mockup_now_by_minute = exports.delay_mockup_now_by_second = exports.get_chain_id = exports.set_mockup_chain_id = exports.get_mockup_now = exports.set_mockup_now = exports.set_quiet = exports.is_mockup = exports.set_mockup = exports.get_endpoint = exports.set_endpoint = exports.Account = void 0;
var Completium = require('@completium/completium-cli');
var att = __importStar(require("@completium/archetype-ts-types"));
/* Interfaces -------------------------------------------------------------- */
var Account = /** @class */ (function () {
    function Account(n, k, h, s) {
        var _this = this;
        this.get_address = function () {
            return new att.Address(_this.pkh);
        };
        this.get_public_key = function () {
            return new att.Key(_this.pubk);
        };
        this.get_secret_key = function () {
            return _this.sk;
        };
        this.get_name = function () {
            return _this.name;
        };
        this.get_balance = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, exports.get_balance)(this.get_address())];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); };
        this.sign = function (value) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, exports.sign)(value, this)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        }); };
        this.name = n;
        this.pubk = k;
        this.pkh = h;
        this.sk = s;
    }
    return Account;
}());
exports.Account = Account;
/* Experiment API ---------------------------------------------------------- */
var set_endpoint = function (endpoint) {
    Completium.setEndpoint(endpoint);
};
exports.set_endpoint = set_endpoint;
var get_endpoint = function () {
    var res = Completium.getEndpoint();
    return res;
};
exports.get_endpoint = get_endpoint;
var set_mockup = function () {
    Completium.setEndpoint('mockup');
};
exports.set_mockup = set_mockup;
var is_mockup = function () {
    var res = Completium.isMockup();
    return res;
};
exports.is_mockup = is_mockup;
var set_quiet = function (b) {
    Completium.setQuiet(b);
};
exports.set_quiet = set_quiet;
var set_mockup_now = function (d) {
    var time = d.getTime();
    var res = Math.floor(time / 1000);
    Completium.setMockupNow(res);
};
exports.set_mockup_now = set_mockup_now;
var get_mockup_now = function () {
    return Completium.getMockupNow();
};
exports.get_mockup_now = get_mockup_now;
var set_mockup_chain_id = function (input) {
    Completium.setMockupChainId(input.toString());
};
exports.set_mockup_chain_id = set_mockup_chain_id;
var get_chain_id = function () { return __awaiter(void 0, void 0, void 0, function () {
    var value;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.getChainId()];
            case 1:
                value = _a.sent();
                return [2 /*return*/, new att.Chain_id(value)];
        }
    });
}); };
exports.get_chain_id = get_chain_id;
var delay_mockup_now_by_second = function (v) {
    var md = (0, exports.get_mockup_now)();
    var new_date_value = md.getTime() + v * 1000;
    (0, exports.set_mockup_now)(new Date(new_date_value));
};
exports.delay_mockup_now_by_second = delay_mockup_now_by_second;
var delay_mockup_now_by_minute = function (v) {
    var md = (0, exports.get_mockup_now)();
    var new_date_value = md.getTime() + v * 1000 * 60;
    (0, exports.set_mockup_now)(new Date(new_date_value));
};
exports.delay_mockup_now_by_minute = delay_mockup_now_by_minute;
var delay_mockup_now_by_hour = function (v) {
    var md = (0, exports.get_mockup_now)();
    var new_date_value = md.getTime() + v * 1000 * 60 * 60;
    (0, exports.set_mockup_now)(new Date(new_date_value));
};
exports.delay_mockup_now_by_hour = delay_mockup_now_by_hour;
var delay_mockup_now_by_day = function (v) {
    var md = (0, exports.get_mockup_now)();
    var new_date_value = md.getTime() + v * 1000 * 60 * 60 * 24;
    (0, exports.set_mockup_now)(new Date(new_date_value));
};
exports.delay_mockup_now_by_day = delay_mockup_now_by_day;
var delay_mockup_now_by_week = function (v) {
    var md = (0, exports.get_mockup_now)();
    var new_date_value = md.getTime() + v * 1000 * 60 * 60 * 24 * 7;
    (0, exports.set_mockup_now)(new Date(new_date_value));
};
exports.delay_mockup_now_by_week = delay_mockup_now_by_week;
var get_account = function (name) {
    var a = Completium.getAccount(name);
    return new Account(a.name, a.pubk, a.pkh, a.sk);
};
exports.get_account = get_account;
var pack = function (obj, typ) {
    if (typ != undefined) {
        return new att.Bytes(Completium.packTyped(obj, typ));
    }
    else {
        return new att.Bytes(Completium.pack(obj));
    }
};
exports.pack = pack;
var blake2b = function (b) {
    return new att.Bytes(Completium.blake2b(b.toString()));
};
exports.blake2b = blake2b;
var get_balance = function (addr) { return __awaiter(void 0, void 0, void 0, function () {
    var b;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.retrieveBalanceFor(addr.toString())];
            case 1:
                b = _a.sent();
                return [2 /*return*/, new att.Tez(b, "mutez")];
        }
    });
}); };
exports.get_balance = get_balance;
/**
 * Expects f to fail with error
 * @param f async call to execute
 * @param error error that f is expected to thow
 */
var expect_to_fail = function (f, error) { return __awaiter(void 0, void 0, void 0, function () {
    var str_error, m, ex_1, json, str_value;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                str_error = JSON.stringify(error, null, 2).toString().replace(/\\"/gi, '');
                m = "Failed to throw " + str_error;
                _a.label = 1;
            case 1:
                _a.trys.push([1, 3, , 4]);
                return [4 /*yield*/, f()];
            case 2:
                _a.sent();
                throw new Error(m);
            case 3:
                ex_1 = _a.sent();
                if (ex_1.value) {
                    json = Completium.exprMichelineToJson(ex_1.value);
                    str_value = JSON.stringify(json, null, 2);
                    if (str_value != str_error) {
                        throw new Error("actual ".concat(str_value, " vs. expected ").concat(str_error));
                    }
                }
                else {
                    throw ex_1;
                }
                return [3 /*break*/, 4];
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.expect_to_fail = expect_to_fail;
/**
 * Returns value associated to key in big map
 * @param big_map_id big map identifier
 * @param key_value value of key
 * @param key_type type of key
 * @returns Micheline value associated to key
 */
var get_big_map_value = function (big_map_id, key_value, key_type, value_type) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.getValueFromBigMap(big_map_id.toString(), key_value, key_type, value_type)];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.get_big_map_value = get_big_map_value;
var sign = function (b, a) { return __awaiter(void 0, void 0, void 0, function () {
    var signed;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.signFromSk(b.toString(), { sk: a.get_secret_key() })];
            case 1:
                signed = _a.sent();
                return [2 /*return*/, new att.Signature(signed.prefixSig)];
        }
    });
}); };
exports.sign = sign;
/**
 * Returns contract storage
 * @param c contract address
 * @returns storage record
 */
var get_storage = function (c) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.getStorage(c)];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.get_storage = get_storage;
/**
 * Returns contract storage
 * @param c contract address
 * @returns storage record
 */
var get_raw_storage = function (c) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.getRawStorage(c)];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.get_raw_storage = get_raw_storage;
/**
 * Deploys contract
 * @param path (relative/absolute) path to archetype file (.arl)
 * @param params contract parameters
 * @param p deployment parameters (as, amout)
 * @returns address of deployed contract
 */
var deploy = function (path, params, p) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, contract, _;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, Completium.deploy(path, {
                    parametersMicheline: params,
                    as: p.as ? p.as.pkh : undefined,
                    amount: p.amount ? p.amount.toString() + "utz" : undefined
                })];
            case 1:
                _a = _b.sent(), contract = _a[0], _ = _a[1];
                return [2 /*return*/, { address: contract.address }];
        }
    });
}); };
exports.deploy = deploy;
var originate = function (path, storage, p) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, contract, _;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, Completium.originate(path, {
                    storage_json: storage,
                    as: p.as ? p.as.pkh : undefined,
                    amount: p.amount ? p.amount.toString() + "utz" : undefined
                })];
            case 1:
                _a = _b.sent(), contract = _a[0], _ = _a[1];
                return [2 /*return*/, { address: contract.address }];
        }
    });
}); };
exports.originate = originate;
var deploy_from_json = function (name, code, storage, p) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, contract, _;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, Completium.originate(null, {
                    named: name,
                    contract_json: code,
                    as: p.as ? p.as.pkh : undefined,
                    storage_json: storage
                })];
            case 1:
                _a = _b.sent(), contract = _a[0], _ = _a[1];
                return [2 /*return*/, { address: contract.address }];
        }
    });
}); };
exports.deploy_from_json = deploy_from_json;
var deploy_callback = function (name, mt, p) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, (0, exports.deploy_from_json)(name + "_callback", [
                    {
                        "prim": "storage",
                        "args": [
                            {
                                "prim": "option",
                                "args": [
                                    mt
                                ]
                            }
                        ]
                    },
                    {
                        "prim": "parameter",
                        "args": [
                            __assign(__assign({}, mt), { annots: ["%callback"] })
                        ]
                    },
                    {
                        "prim": "code",
                        "args": [
                            [
                                {
                                    "prim": "CAR"
                                },
                                {
                                    "prim": "SOME"
                                },
                                {
                                    "prim": "NIL",
                                    "args": [
                                        {
                                            "prim": "operation"
                                        }
                                    ]
                                },
                                {
                                    "prim": "PAIR"
                                }
                            ]
                        ]
                    }
                ], { prim: "None" }, p)];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.deploy_callback = deploy_callback;
var get_callback_value = function (callback_addr, mich_to) { return __awaiter(void 0, void 0, void 0, function () {
    var mich;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, (0, exports.get_raw_storage)(callback_addr)];
            case 1:
                mich = _a.sent();
                if (mich && mich.prim == 'Some') {
                    return [2 /*return*/, mich_to(mich.args[0])];
                }
                else if (mich && mich.prim == 'None') {
                    throw new Error("get_callback_value: None value");
                }
                throw new Error("get_callback_value: internal error");
        }
    });
}); };
exports.get_callback_value = get_callback_value;
var process_events = function (input) {
    var events = [];
    if (input && input.events) {
        events = input.events.map(function (x) {
            return {
                from: new att.Address(x.from),
                type: (0, exports.expr_micheline_to_json)(x.type),
                tag: x.tag,
                payload: (0, exports.expr_micheline_to_json)(x.payload),
                consumed_gas: Number.parseInt(x.consumed_gas)
            };
        });
    }
    return events;
};
/**
 * Calls a contract entrypoint
 * @param c contract address
 * @param e entry point name
 * @param a entry point argument
 * @param p parameters (as, amount)
 */
var call = function (c, e, a, p) { return __awaiter(void 0, void 0, void 0, function () {
    var res, events, operation_hash, storage_size, consumed_gas, paid_storage_size_diff;
    var _a, _b, _c, _d;
    return __generator(this, function (_e) {
        switch (_e.label) {
            case 0: return [4 /*yield*/, Completium.call(c, {
                    entry: e,
                    argJsonMichelson: a,
                    as: p.as ? p.as.pkh : undefined,
                    amount: p.amount ? p.amount.toString() + "utz" : undefined
                })];
            case 1:
                res = _e.sent();
                events = process_events(res);
                operation_hash = (_a = res.operation_hash) !== null && _a !== void 0 ? _a : "";
                storage_size = Number.parseFloat((_b = res.storage_size) !== null && _b !== void 0 ? _b : "0");
                consumed_gas = Number.parseFloat((_c = res.consumed_gas) !== null && _c !== void 0 ? _c : "0");
                paid_storage_size_diff = Number.parseFloat((_d = res.paid_storage_size_diff) !== null && _d !== void 0 ? _d : "0");
                return [2 /*return*/, __assign(__assign({}, res), { operation_hash: operation_hash, storage_size: storage_size, consumed_gas: consumed_gas, paid_storage_size_diff: paid_storage_size_diff, events: events })];
        }
    });
}); };
exports.call = call;
var get_call_param = function (c, e, a, p) { return __awaiter(void 0, void 0, void 0, function () {
    var param;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.call(c, {
                    entry: e,
                    argJsonMichelson: a,
                    as: p.as ? p.as.pkh : undefined,
                    amount: p.amount ? p.amount.toString() + "utz" : undefined,
                    only_param: true
                })];
            case 1:
                param = _a.sent();
                return [2 /*return*/, {
                        destination: new att.Address(param.to),
                        amount: new att.Tez(param.amount),
                        fee: param.fee ? new att.Tez(param.fee) : undefined,
                        entrypoint: param.parameter.entrypoint,
                        arg: param.parameter.value
                    }];
        }
    });
}); };
exports.get_call_param = get_call_param;
var exec_batch = function (cps, p) { return __awaiter(void 0, void 0, void 0, function () {
    var res, events;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.exec_batch(cps.map(function (x) {
                    var _a;
                    return {
                        kind: "transaction",
                        to: x.destination.toString(),
                        amount: x.amount.toString(),
                        mutez: true,
                        fee: (_a = x.fee) === null || _a === void 0 ? void 0 : _a.toString(),
                        parameter: {
                            entrypoint: x.entrypoint,
                            value: x.arg
                        }
                    };
                }), {
                    as: p.as ? p.as.pkh : undefined
                })];
            case 1:
                res = _a.sent();
                events = process_events(res);
                return [2 /*return*/, __assign(__assign({}, res), { events: events })];
        }
    });
}); };
exports.exec_batch = exec_batch;
var exec_getter = function (contract, entry, arg, param) { return __awaiter(void 0, void 0, void 0, function () {
    var res;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.runGetter(entry, contract.toString(), {
                    argJsonMichelson: arg,
                    as: param.as ? param.as.pkh : undefined,
                    amount: param.amount ? param.amount.toString() + "utz" : undefined,
                    json: true,
                })];
            case 1:
                res = _a.sent();
                return [2 /*return*/, { value: res, events: [], dummy: 0 }];
        }
    });
}); };
exports.exec_getter = exec_getter;
var exec_view = function (contract, view, arg, param) { return __awaiter(void 0, void 0, void 0, function () {
    var res;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.runView(view, contract.toString(), {
                    argJsonMichelson: arg,
                    as: param.as ? param.as.pkh : undefined,
                    amount: param.amount ? param.amount.toString() + "utz" : undefined,
                    json: true
                })];
            case 1:
                res = _a.sent();
                return [2 /*return*/, { value: res, dummy: 0 }];
        }
    });
}); };
exports.exec_view = exec_view;
/**
 * Transfers tez
 * @param from account to transfer from
 * @param to   account or address to transfer to
 * @param amount amount to transfer in mutez
 * @returns
 */
var transfer = function (from, to, amount) { return __awaiter(void 0, void 0, void 0, function () {
    var to_, res;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                to_ = typeof to == "string" ? to : to.pkh;
                return [4 /*yield*/, Completium.transfer(from.pkh, to_, amount.toString())];
            case 1:
                res = _a.sent();
                return [2 /*return*/, __assign(__assign({}, res), { dummy: 0 })];
        }
    });
}); };
exports.transfer = transfer;
var expr_micheline_to_json = function (input) {
    return Completium.exprMichelineToJson(input);
};
exports.expr_micheline_to_json = expr_micheline_to_json;
var json_micheline_to_expr = function (input) {
    return Completium.jsonMichelineToExpr(input);
};
exports.json_micheline_to_expr = json_micheline_to_expr;
var register_global_constant = function (input, param) { return __awaiter(void 0, void 0, void 0, function () {
    var mich_value;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                mich_value = (0, exports.json_micheline_to_expr)(input);
                return [4 /*yield*/, Completium.registerGlobalConstant({
                        value: mich_value,
                        as: param.as ? param.as.pkh : undefined,
                        force: true
                    })];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.register_global_constant = register_global_constant;
var get_mockup_level = function () { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.getMockupLevel()];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.get_mockup_level = get_mockup_level;
var mockup_bake = function () { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Completium.mockupBake({})];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
exports.mockup_bake = mockup_bake;
var mockup_init = function (parameters) { return __awaiter(void 0, void 0, void 0, function () {
    var obj;
    var _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                obj = {
                    protocol: (_a = parameters === null || parameters === void 0 ? void 0 : parameters.protocol) !== null && _a !== void 0 ? _a : null
                };
                return [4 /*yield*/, Completium.mockupInit(obj)];
            case 1: return [2 /*return*/, _b.sent()];
        }
    });
}); };
exports.mockup_init = mockup_init;
var configure_experiment = function (parameters) { return __awaiter(void 0, void 0, void 0, function () {
    var account, endpoint, quiet;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        account = (_a = parameters === null || parameters === void 0 ? void 0 : parameters.account) !== null && _a !== void 0 ? _a : 'alice';
        endpoint = (_b = parameters === null || parameters === void 0 ? void 0 : parameters.endpoint) !== null && _b !== void 0 ? _b : 'mockup';
        quiet = (_c = parameters === null || parameters === void 0 ? void 0 : parameters.quiet) !== null && _c !== void 0 ? _c : true;
        (0, exports.set_quiet)(quiet);
        Completium.setAccount(account);
        (0, exports.set_endpoint)(endpoint);
        return [2 /*return*/];
    });
}); };
exports.configure_experiment = configure_experiment;
var get_sandbox_exec_address = function () {
    var addr = Completium.get_sandbox_exec_address();
    return new att.Address(addr);
};
exports.get_sandbox_exec_address = get_sandbox_exec_address;
//# sourceMappingURL=main.js.map