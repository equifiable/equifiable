"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.services = exports.lsp = exports.show_entries = exports.get_expr_type = exports.get_expr = exports.decompile_from_string = exports.decompile = exports.compile_from_string = exports.compile = exports.version = void 0;
var api = require("./api.bc.js");
function version() {
    return api.version;
}
exports.version = version;
function compile(src, settings = {}) {
    return api.compile()(src, settings).trim();
}
exports.compile = compile;
function compile_from_string(src, settings = {}) {
    return api.compileFromString()(src, settings).trim();
}
exports.compile_from_string = compile_from_string;
function decompile(src, settings = {}) {
    return api.decompile()(src, settings).trim();
}
exports.decompile = decompile;
function decompile_from_string(src, settings = {}) {
    return api.decompileFromString()(src, settings).trim();
}
exports.decompile_from_string = decompile_from_string;
function get_expr(data, settings = {}) {
    return api.getExpr()(data, settings).trim();
}
exports.get_expr = get_expr;
function get_expr_type(data, type, settings = {}) {
    return api.getExprType()(data, type, settings).trim();
}
exports.get_expr_type = get_expr_type;
function show_entries(src, settings = {}) {
    return api.showEntries()(src, settings).trim();
}
exports.show_entries = show_entries;
function lsp(kind, path, src) {
    return api.lsp()(kind, path, src);
}
exports.lsp = lsp;
function services(service, src) {
    return api.services()(service, src);
}
exports.services = services;
